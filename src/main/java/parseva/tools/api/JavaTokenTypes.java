package parseva.tools.api;

import parseva.tools.grammar.JavaParser;

public final class TokenTypes {
    public static final int EOF = JavaParser.EOF;
    public static final int MODIFIERS = JavaParser.MODIFIERS;
    public static final int OBJBLOCK = JavaParser.OBJBLOCK;
    public static final int SLIST = JavaParser.SLIST;
    public static final int CTOR_DEF = JavaParser.CTOR_DEF;
    public static final int METHOD_DEF = JavaParser.METHOD_DEF;
    public static final int VARIABLE_DEF = JavaParser.VARIABLE_DEF;
    public static final int INSTANCE_INIT = JavaParser.INSTANCE_INIT;
    public static final int STATIC_INIT = JavaParser.STATIC_INIT;
    public static final int TYPE = JavaParser.TYPE;
    public static final int CLASS_DEF = JavaParser.CLASS_DEF;
    public static final int INTERFACE_DEF = JavaParser.INTERFACE_DEF;
    public static final int PACKAGE_DEF = JavaParser.PACKAGE_DEF;
    public static final int ARRAY_DECLARATOR = JavaParser.ARRAY_DECLARATOR;
    public static final int EXTENDS_CLAUSE = JavaParser.EXTENDS_CLAUSE;
    public static final int IMPLEMENTS_CLAUSE = JavaParser.IMPLEMENTS_CLAUSE;
    public static final int PARAMETERS = JavaParser.PARAMETERS;
    public static final int PARAMETER_DEF = JavaParser.PARAMETER_DEF;
    public static final int LABELED_STAT = JavaParser.LABELED_STAT;
    public static final int TYPECAST = JavaParser.TYPECAST;
    public static final int INDEX_OP = JavaParser.INDEX_OP;
    public static final int POST_INC = JavaParser.POST_INC;
    public static final int POST_DEC = JavaParser.POST_DEC;
    public static final int METHOD_CALL = JavaParser.METHOD_CALL;
    public static final int METHOD_REF = JavaParser.METHOD_REF;
    public static final int EXPR = JavaParser.EXPR;
    public static final int ARRAY_INIT = JavaParser.ARRAY_INIT;
    public static final int IMPORT = JavaParser.IMPORT;
    public static final int UNARY_MINUS = JavaParser.UNARY_MINUS;
    public static final int UNARY_PLUS = JavaParser.UNARY_PLUS;
    public static final int CASE_GROUP = JavaParser.CASE_GROUP;
    public static final int ELIST = JavaParser.ELIST;
    public static final int FOR_INIT = JavaParser.FOR_INIT;
    public static final int FOR_CONDITION = JavaParser.FOR_CONDITION;
    public static final int FOR_ITERATOR = JavaParser.FOR_ITERATOR;
    public static final int EMPTY_STAT = JavaParser.EMPTY_STAT;
    public static final int FINAL = JavaParser.FINAL;
    public static final int ABSTRACT = JavaParser.ABSTRACT;
    public static final int STRICTFP = JavaParser.STRICTFP;
    public static final int SUPER_CTOR_CALL = JavaParser.SUPER_CTOR_CALL;
    public static final int CTOR_CALL = JavaParser.CTOR_CALL;
    public static final int SEMI = JavaParser.SEMI;
    public static final int RBRACK = JavaParser.RBRACK;
    public static final int LITERAL_VOID = JavaParser.LITERAL_void;
    public static final int LITERAL_BOOLEAN = JavaParser.LITERAL_boolean;
    public static final int LITERAL_BYTE = JavaParser.LITERAL_byte;
    public static final int LITERAL_CHAR = JavaParser.LITERAL_char;
    public static final int LITERAL_SHORT = JavaParser.LITERAL_short;
    public static final int LITERAL_INT = JavaParser.LITERAL_int;
    public static final int LITERAL_FLOAT = JavaParser.LITERAL_float;
    public static final int LITERAL_LONG = JavaParser.LITERAL_long;
    public static final int LITERAL_DOUBLE = JavaParser.LITERAL_double;
    public static final int IDENT = JavaParser.IDENT;
    public static final int DOT = JavaParser.DOT;
    public static final int STAR = JavaParser.STAR;
    public static final int LITERAL_PRIVATE = JavaParser.LITERAL_private;
    public static final int LITERAL_PUBLIC = JavaParser.LITERAL_public;
    public static final int LITERAL_PROTECTED = JavaParser.LITERAL_protected;
    public static final int LITERAL_STATIC = JavaParser.LITERAL_static;
    public static final int LITERAL_TRANSIENT = JavaParser.LITERAL_transient;
    public static final int LITERAL_NATIVE = JavaParser.LITERAL_native;
    public static final int LITERAL_SYNCHRONIZED = JavaParser.LITERAL_synchronized;
    public static final int LITERAL_VOLATILE = JavaParser.LITERAL_volatile;
    public static final int LITERAL_CLASS = JavaParser.LITERAL_class;
    public static final int LITERAL_INTERFACE = JavaParser.LITERAL_interface;
    public static final int LCURLY = JavaParser.LCURLY;
    public static final int RCURLY = JavaParser.RCURLY;
    public static final int COMMA = JavaParser.COMMA;
    public static final int LPAREN = JavaParser.LPAREN;
    public static final int RPAREN = JavaParser.RPAREN;
    public static final int LITERAL_THIS = JavaParser.LITERAL_this;
    public static final int LITERAL_SUPER = JavaParser.LITERAL_super;
    public static final int ASSIGN = JavaParser.ASSIGN;
    public static final int LITERAL_THROWS = JavaParser.LITERAL_throws;
    public static final int COLON = JavaParser.COLON;
    public static final int DOUBLE_COLON = JavaParser.DOUBLE_COLON;
    public static final int LITERAL_IF = JavaParser.LITERAL_if;
    public static final int LITERAL_FOR = JavaParser.LITERAL_for;
    public static final int LITERAL_WHILE = JavaParser.LITERAL_while;
    public static final int LITERAL_DO = JavaParser.LITERAL_do;
    public static final int DO_WHILE = JavaParser.DO_WHILE;
    public static final int LITERAL_BREAK = JavaParser.LITERAL_break;
    public static final int LITERAL_CONTINUE = JavaParser.LITERAL_continue;
    public static final int LITERAL_RETURN = JavaParser.LITERAL_return;
    public static final int LITERAL_SWITCH = JavaParser.LITERAL_switch;
    public static final int LITERAL_THROW = JavaParser.LITERAL_throw;
    public static final int LITERAL_ELSE = JavaParser.LITERAL_else;
    public static final int LITERAL_CASE = JavaParser.LITERAL_case;
    public static final int LITERAL_DEFAULT = JavaParser.LITERAL_default;
    public static final int LITERAL_TRY = JavaParser.LITERAL_try;
    public static final int RESOURCE_SPECIFICATION = JavaParser.RESOURCE_SPECIFICATION;
    public static final int RESOURCES = JavaParser.RESOURCES;
    public static final int RESOURCE = JavaParser.RESOURCE;
    public static final int LITERAL_CATCH = JavaParser.LITERAL_catch;
    public static final int LITERAL_FINALLY = JavaParser.LITERAL_finally;
    public static final int PLUS_ASSIGN = JavaParser.PLUS_ASSIGN;
    public static final int MINUS_ASSIGN = JavaParser.MINUS_ASSIGN;
    public static final int STAR_ASSIGN = JavaParser.STAR_ASSIGN;
    public static final int DIV_ASSIGN = JavaParser.DIV_ASSIGN;
    public static final int MOD_ASSIGN = JavaParser.MOD_ASSIGN;
    public static final int SR_ASSIGN = JavaParser.SR_ASSIGN;
    public static final int BSR_ASSIGN = JavaParser.BSR_ASSIGN;
    public static final int SL_ASSIGN = JavaParser.SL_ASSIGN;
    public static final int BAND_ASSIGN = JavaParser.BAND_ASSIGN;
    public static final int BXOR_ASSIGN = JavaParser.BXOR_ASSIGN;
    public static final int BOR_ASSIGN = JavaParser.BOR_ASSIGN;
    public static final int QUESTION = JavaParser.QUESTION;
    public static final int LOR = JavaParser.LOR;
    public static final int LAND = JavaParser.LAND;
    public static final int BOR = JavaParser.BOR;
    public static final int BXOR = JavaParser.BXOR;
    public static final int BAND = JavaParser.BAND;
    public static final int NOT_EQUAL = JavaParser.NOT_EQUAL;
    public static final int EQUAL = JavaParser.EQUAL;
    public static final int LT = JavaParser.LT;
    public static final int GT = JavaParser.GT;
    public static final int LE = JavaParser.LE;
    public static final int GE = JavaParser.GE;
    public static final int LITERAL_INSTANCEOF = JavaParser.LITERAL_instanceof;
    public static final int SL = JavaParser.SL;
    public static final int SR = JavaParser.SR;
    public static final int BSR = JavaParser.BSR;
    public static final int PLUS = JavaParser.PLUS;
    public static final int MINUS = JavaParser.MINUS;
    public static final int DIV = JavaParser.DIV;
    public static final int MOD = JavaParser.MOD;
    public static final int INC = JavaParser.INC;
    public static final int DEC = JavaParser.DEC;
    public static final int BNOT = JavaParser.BNOT;
    public static final int LNOT = JavaParser.LNOT;
    public static final int LITERAL_TRUE = JavaParser.LITERAL_true;
    public static final int LITERAL_FALSE = JavaParser.LITERAL_false;
    public static final int LITERAL_NULL = JavaParser.LITERAL_null;
    public static final int LITERAL_NEW = JavaParser.LITERAL_new;
    public static final int NUM_INT = JavaParser.NUM_INT;
    public static final int CHAR_LITERAL = JavaParser.CHAR_LITERAL;
    public static final int STRING_LITERAL = JavaParser.STRING_LITERAL;
    public static final int NUM_FLOAT = JavaParser.NUM_FLOAT;
    public static final int NUM_LONG = JavaParser.NUM_LONG;
    public static final int NUM_DOUBLE = JavaParser.NUM_DOUBLE;
    public static final int LITERAL_ASSERT = JavaParser.ASSERT;
    public static final int STATIC_IMPORT = JavaParser.STATIC_IMPORT;
    public static final int ENUM_DEF = JavaParser.ENUM_DEF;
    public static final int ENUM = JavaParser.ENUM;
    public static final int ENUM_CONSTANT_DEF = JavaParser.ENUM_CONSTANT_DEF;
    public static final int FOR_EACH_CLAUSE = JavaParser.FOR_EACH_CLAUSE;
    public static final int ANNOTATION_DEF = JavaParser.ANNOTATION_DEF;
    public static final int ANNOTATION_FIELD_DEF = JavaParser.ANNOTATION_FIELD_DEF;
    public static final int ANNOTATION = JavaParser.ANNOTATION;
    public static final int ANNOTATION_MEMBER_VALUE_PAIR = JavaParser.ANNOTATION_MEMBER_VALUE_PAIR;
    public static final int ANNOTATION_ARRAY_INIT = JavaParser.ANNOTATION_ARRAY_INIT;
    public static final int TYPE_PARAMETERS = JavaParser.TYPE_PARAMETERS;
    public static final int TYPE_PARAMETER = JavaParser.TYPE_PARAMETER;
    public static final int TYPE_ARGUMENTS = JavaParser.TYPE_ARGUMENTS;
    public static final int TYPE_ARGUMENT = JavaParser.TYPE_ARGUMENT;
    public static final int WILDCARD_TYPE = JavaParser.WILDCARD_TYPE;
    public static final int TYPE_UPPER_BOUNDS = JavaParser.TYPE_UPPER_BOUNDS;
    public static final int TYPE_LOWER_BOUNDS = JavaParser.TYPE_LOWER_BOUNDS;
    public static final int AT = JavaParser.AT;
    public static final int ELLIPSIS = JavaParser.ELLIPSIS;
    public static final int TYPE_EXTENSION_AND = JavaParser.TYPE_EXTENSION_AND;
    public static final int GENERIC_START = JavaParser.GENERIC_START;
    public static final int GENERIC_END = JavaParser.GENERIC_END;
    public static final int LAMBDA = JavaParser.LAMBDA;
    public static final int SINGLE_LINE_COMMENT = JavaParser.SINGLE_LINE_COMMENT;
    public static final int BLOCK_COMMENT_BEGIN = JavaParser.BLOCK_COMMENT_BEGIN;
    public static final int BLOCK_COMMENT_END = JavaParser.BLOCK_COMMENT_END;
    public static final int COMMENT_CONTENT = JavaParser.COMMENT_CONTENT;
    public static final int PATTERN_VARIABLE_DEF = JavaParser.PATTERN_VARIABLE_DEF;
    public static final int LITERAL_RECORD = JavaParser.LITERAL_record;
    public static final int RECORD_DEF = JavaParser.RECORD_DEF;
    public static final int RECORD_COMPONENTS = JavaParser.RECORD_COMPONENTS;
    public static final int RECORD_COMPONENT_DEF = JavaParser.RECORD_COMPONENT_DEF;
    public static final int COMPACT_CTOR_DEF = JavaParser.COMPACT_CTOR_DEF;
    public static final int TEXT_BLOCK_LITERAL_BEGIN = JavaParser.TEXT_BLOCK_LITERAL_BEGIN;
    public static final int TEXT_BLOCK_CONTENT = JavaParser.TEXT_BLOCK_CONTENT;
    public static final int TEXT_BLOCK_LITERAL_END = JavaParser.TEXT_BLOCK_LITERAL_END;
    public static final int LITERAL_YIELD = JavaParser.LITERAL_yield;
    public static final int SWITCH_RULE = JavaParser.SWITCH_RULE;

    private TokenTypes() {
    }
}
}